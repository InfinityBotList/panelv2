// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { AuthorizeAction } from './AuthorizeAction';
import type { BlogAction } from './BlogAction';
import type { BotWhitelistAction } from './BotWhitelistAction';
import type { CdnAssetAction } from './CdnAssetAction';
import type { ChangelogAction } from './ChangelogAction';
import type { PartnerAction } from './PartnerAction';
import type { RPCMethod } from './RPCMethod';
import type { StaffDisciplinaryTypeAction } from './StaffDisciplinaryTypeAction';
import type { StaffMemberAction } from './StaffMemberAction';
import type { StaffPositionAction } from './StaffPositionAction';
import type { TargetType } from './TargetType';
import type { VoteCreditTierAction } from './VoteCreditTierAction';

export type PanelQuery =
	| {
			Authorize: {
				/**
				 * Authorize protocol version, should be `AUTH_VERSION`
				 */
				version: number;
				/**
				 * Action to take
				 */
				action: AuthorizeAction;
			};
	  }
	| {
			Hello: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Hello protocol version, should be `HELLO_VERSION`
				 */
				version: number;
			};
	  }
	| {
			BaseAnalytics: {
				/**
				 * Login token
				 */
				login_token: string;
			};
	  }
	| {
			GetUser: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * User ID to fetch details for
				 */
				user_id: string;
			};
	  }
	| {
			BotQueue: {
				/**
				 * Login token
				 */
				login_token: string;
			};
	  }
	| {
			ExecuteRpc: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Target Type
				 */
				target_type: TargetType;
				/**
				 * RPC Method
				 */
				method: RPCMethod;
			};
	  }
	| {
			GetRpcMethods: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Filtered
				 */
				filtered: boolean;
			};
	  }
	| {
			GetRpcLogEntries: {
				/**
				 * Login token
				 */
				login_token: string;
			};
	  }
	| {
			SearchEntitys: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Target type
				 */
				target_type: TargetType;
				/**
				 * Query
				 */
				query: string;
			};
	  }
	| {
			UploadCdnFileChunk: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Array of bytes of the chunk contents
				 */
				chunk: Array<number>;
			};
	  }
	| {
			ListCdnScopes: {
				/**
				 * Login token
				 */
				login_token: string;
			};
	  }
	| {
			GetMainCdnScope: {
				/**
				 * Login token
				 */
				login_token: string;
			};
	  }
	| {
			UpdateCdnAsset: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * CDN scope
				 *
				 * This describes a location where the CDN may be stored on disk and should be a full path to it
				 *
				 * Currently the panel uses the following scopes:
				 *
				 * `ibl@main`
				 */
				cdn_scope: string;
				/**
				 * Asset name
				 */
				name: string;
				/**
				 * Path
				 */
				path: string;
				/**
				 * Action to take
				 */
				action: CdnAssetAction;
			};
	  }
	| {
			UpdatePartners: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: PartnerAction;
			};
	  }
	| {
			UpdateChangelog: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: ChangelogAction;
			};
	  }
	| {
			UpdateBlog: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: BlogAction;
			};
	  }
	| {
			UpdateStaffPositions: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: StaffPositionAction;
			};
	  }
	| {
			UpdateStaffMembers: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: StaffMemberAction;
			};
	  }
	| {
			UpdateStaffDisciplinaryType: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: StaffDisciplinaryTypeAction;
			};
	  }
	| {
			UpdateVoteCreditTiers: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: VoteCreditTierAction;
			};
	  }
	| {
			UpdateBotWhitelist: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Action
				 */
				action: BotWhitelistAction;
			};
	  }
	| {
			PopplioStaff: {
				/**
				 * Login token
				 */
				login_token: string;
				/**
				 * Path
				 */
				path: string;
				/**
				 * Method
				 */
				method: string;
				/**
				 * Body
				 */
				body: string;
			};
	  };
